.TH _PRINTF 1 "November 2021" "1.0" "_printf man page"
.SH NAME
_printf - format and print data

.SH SYNOPSIS
#include "main.h"
.br
#include "stdarg.h"

int _printf(const char *format, ...);

.SH DESCRIPTION
The function _printf writes output to stdout, the standard output stream.

.SS FORMAT
The format string is composed of ordinary characters (not %), which are copied unchanged to the output stream and conversion specifications, each of which results in fetching zero or more subsequent arguments.

.SS CONVERSION SPECIFIERS
A character that specifies the type of conversion to be applied situated behind the (%) sign.
.br 
The conversion specifiers and their meanings are:
.br
.B d, i
The argument is converted to signed decimal notation.
.br
.B s
The argument is expected to be a pointer to a string. Characters from the array are written up to (but not including) a terminating null byte.
.br
.B c
The argument is converted to an unsigned char, and the resulting character is written.
.br
.B %
A '%' is written.  No argument is converted.  The complete conversion specification is '%%'.

.SH RETURN VALUE
The _printf function returns the number of characters printed (excluding the ('\\0j') byte used to end output to strings).

.SH EXAMPLES
To print a character:

    _printf("%c", "a");

To print a string of characters:

    _printf("%s", "Hello");

To print an integer:

    _printf("%d", 1);

To print a %:

    _printf("%%");

.SH AUTHORS
Written by Remi Marcais & Tommy Chanthavisouk